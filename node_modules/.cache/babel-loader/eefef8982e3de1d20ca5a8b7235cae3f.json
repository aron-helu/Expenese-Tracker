{"ast":null,"code":"import'./ChartBar.css';/* eslint-disable react/destructuring-assignment */ /* eslint-disable react/prop-types */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChartBar=function ChartBar(props){var barFillHeight='0%';if(props.maxValue>0){barFillHeight=\"\".concat(Math.round(props.value/props.maxValue*100),\"%\");}return/*#__PURE__*/_jsxs(\"div\",{className:\"chart-bar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar__inner\",children:/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar__fill\",style:{height:barFillHeight}})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart-bar__label\",children:props.label})]});};export default ChartBar;","map":{"version":3,"names":["ChartBar","props","barFillHeight","maxValue","Math","round","value","height","label"],"sources":["/home/milu/Desktop/Expense-Tracker/src/Components/Chart/ChartBar.js"],"sourcesContent":["import './ChartBar.css';\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/prop-types */\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = `${Math.round((props.value / props.maxValue) * 100)}%`;\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        />\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n"],"mappings":"AAAA,MAAO,gBAAP,CACA,mD,CACA,qC,wFAEA,GAAMA,SAAQ,CAAG,QAAXA,SAAW,CAACC,KAAD,CAAW,CAC1B,GAAIC,cAAa,CAAG,IAApB,CAEA,GAAID,KAAK,CAACE,QAAN,CAAiB,CAArB,CAAwB,CACtBD,aAAa,WAAME,IAAI,CAACC,KAAL,CAAYJ,KAAK,CAACK,KAAN,CAAcL,KAAK,CAACE,QAArB,CAAiC,GAA5C,CAAN,KAAb,CACD,CAED,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,YAAK,SAAS,CAAC,kBAAf,uBACE,YACE,SAAS,CAAC,iBADZ,CAEE,KAAK,CAAE,CAAEI,MAAM,CAAEL,aAAV,CAFT,EADF,EADF,cAOE,YAAK,SAAS,CAAC,kBAAf,UAAmCD,KAAK,CAACO,KAAzC,EAPF,GADF,CAWD,CAlBD,CAoBA,cAAeR,SAAf"},"metadata":{},"sourceType":"module"}